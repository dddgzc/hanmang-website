// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7jQgmBmKYyCbHXSekk2FRy
// Component: RTMI8sp8urx
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: w7EiyFeNrat/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import Footer from "../../Footer"; // plasmic-import: ZF4Tnw-zFby/component

import { useScreenVariants as useScreenVariantskJp4EfKscK4Tw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kJp4efKscK4Tw/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_寒芒.module.css"; // plasmic-import: 7jQgmBmKYyCbHXSekk2FRy/projectcss
import sty from "./Plasmic中烟.module.css"; // plasmic-import: RTMI8sp8urx/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: jxcxtzGjitd/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 61HpChsnqny/icon
import Icon52Icon from "./icons/PlasmicIcon__Icon52"; // plasmic-import: IyOfC1LtUJ/icon
import Icon53Icon from "./icons/PlasmicIcon__Icon53"; // plasmic-import: EicT8Es0XX/icon
import Icon54Icon from "./icons/PlasmicIcon__Icon54"; // plasmic-import: 2Y6MRz3iqN/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: fTEoi4xtkr/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: CPrZBowKmb/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: MnPSDNx1dHt/icon
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: qO_UVpfk2WP/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: AVvOQiMFXTC/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: KsamTUlNre/icon
import Icon19Icon from "./icons/PlasmicIcon__Icon19"; // plasmic-import: s8etVvBGvp/icon

export type Plasmic中烟__VariantMembers = {};

export type Plasmic中烟__VariantsArgs = {};
type VariantPropType = keyof Plasmic中烟__VariantsArgs;
export const Plasmic中烟__VariantProps = new Array<VariantPropType>();

export type Plasmic中烟__ArgsType = {};
type ArgPropType = keyof Plasmic中烟__ArgsType;
export const Plasmic中烟__ArgProps = new Array<ArgPropType>();

export type Plasmic中烟__OverridesType = {
  root?: p.Flex<"div">;
  中烟?: p.Flex<"div">;
  navbar?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  寒芒Logo?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  logoText?: p.Flex<"div">;
  导航?: p.Flex<"div">;
  button?: p.Flex<typeof Button>;
  公司描述?: p.Flex<"div">;
  文字?: p.Flex<"div">;
  image9?: p.Flex<"div">;
  tag?: p.Flex<"div">;
  frame4?: p.Flex<"div">;
  业务领域?: p.Flex<"div">;
  title?: p.Flex<"div">;
  frame7?: p.Flex<"div">;
  文字2?: p.Flex<"div">;
  frame18?: p.Flex<"div">;
  image19?: p.Flex<"div">;
  文字3?: p.Flex<"div">;
  frame19?: p.Flex<"div">;
  image20?: p.Flex<"div">;
  客户案例?: p.Flex<"div">;
  title2?: p.Flex<"div">;
  frame12?: p.Flex<"div">;
  解决方案步骤?: p.Flex<"div">;
  number?: p.Flex<"div">;
  tag2?: p.Flex<"div">;
  image?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  title3?: p.Flex<"div">;
  解决方案步骤2?: p.Flex<"div">;
  number2?: p.Flex<"div">;
  tag3?: p.Flex<"div">;
  image2?: p.Flex<"div">;
  title4?: p.Flex<"div">;
  解决方案步骤3?: p.Flex<"div">;
  number3?: p.Flex<"div">;
  tag4?: p.Flex<"div">;
  image3?: p.Flex<"div">;
  title5?: p.Flex<"div">;
  解决方案步骤4?: p.Flex<"div">;
  number4?: p.Flex<"div">;
  tag5?: p.Flex<"div">;
  image4?: p.Flex<"div">;
  title6?: p.Flex<"div">;
  解决方案步骤5?: p.Flex<"div">;
  number5?: p.Flex<"div">;
  tag6?: p.Flex<"div">;
  image5?: p.Flex<"div">;
  title7?: p.Flex<"div">;
  成果展示?: p.Flex<"div">;
  image21?: p.Flex<"div">;
  right?: p.Flex<"div">;
  title9?: p.Flex<"div">;
  title8?: p.Flex<"div">;
  image8?: p.Flex<"div">;
  经济效益2?: p.Flex<"section">;
  foreground2?: p.Flex<"div">;
  icon经济效益?: p.Flex<typeof p.PlasmicImg>;
  box?: p.Flex<"div">;
  竞争优势?: p.Flex<"section">;
  foreground?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface Default中烟Props {}

function Plasmic中烟__RenderFunc(props: {
  variants: Plasmic中烟__VariantsArgs;
  args: Plasmic中烟__ArgsType;
  overrides: Plasmic中烟__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskJp4EfKscK4Tw()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />

        <title key="title">{"中烟公司自动化烤烟分级解决方案"}</title>

        <meta
          key="og:title"
          property="og:title"
          content={"中烟公司自动化烤烟分级解决方案"}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"中烟公司自动化烤烟分级解决方案"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"中烟"}
            data-plasmic-override={overrides.中烟}
            className={classNames(projectcss.all, sty.中烟)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              hasGap={true}
              className={classNames(projectcss.all, sty.navbar)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"logo"}
                data-plasmic-override={overrides.logo}
                hasGap={true}
                className={classNames(projectcss.all, sty.logo)}
              >
                <div
                  data-plasmic-name={"寒芒Logo"}
                  data-plasmic-override={overrides.寒芒Logo}
                  className={classNames(projectcss.all, sty.寒芒Logo)}
                >
                  <div
                    data-plasmic-name={"logo2"}
                    data-plasmic-override={overrides.logo2}
                    className={classNames(projectcss.all, sty.logo2)}
                  />
                </div>

                {true ? (
                  <div
                    data-plasmic-name={"logoText"}
                    data-plasmic-override={overrides.logoText}
                    className={classNames(projectcss.all, sty.logoText)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q7RvO
                      )}
                    >
                      {"寒芒科技"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cU7UQ
                      )}
                    >
                      {"HanMang Technology"}
                    </div>
                  </div>
                ) : null}
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"导航"}
                data-plasmic-override={overrides.导航}
                hasGap={true}
                className={classNames(projectcss.all, sty.导航)}
              >
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  link={"/" as const}
                >
                  {"返回首页"}
                </Button>
              </p.Stack>
            </p.Stack>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__rrD7)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"公司描述"}
                data-plasmic-override={overrides.公司描述}
                hasGap={true}
                className={classNames(projectcss.all, sty.公司描述)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"文字"}
                  data-plasmic-override={overrides.文字}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.文字)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      data-plasmic-name={"image9"}
                      data-plasmic-override={overrides.image9}
                      className={classNames(projectcss.all, sty.image9)}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hi8Qf
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "中烟公司自动化烤烟分级解决方案"
                      : "中烟公司自动化烤烟分级解决方案"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"tag"}
                    data-plasmic-override={overrides.tag}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.tag)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dniQb
                      )}
                    >
                      {"#工业化机器视觉领域"}
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uj0X2
                    )}
                  >
                    {
                      "在烟草行业里，烤干出炉后的烟叶，将烟叶按其质量优劣进行分级。分级的目的是把不同质量的烟叶分开，使每个等级、每把烟叶具有相对一致的质，以便于卷烟企业选用，便于按质论价。 烟叶分级技术性，涉及的内容较多，包括部颜色、成熟度、组织结构、身份、油份、色度、宽度、长度、残伤和破损等诸多方面。"
                    }
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"frame4"}
                  data-plasmic-override={overrides.frame4}
                  className={classNames(projectcss.all, sty.frame4)}
                />
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__xQuk9)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"业务领域"}
                data-plasmic-override={overrides.业务领域}
                hasGap={true}
                className={classNames(projectcss.all, sty.业务领域)}
              >
                <div
                  data-plasmic-name={"title"}
                  data-plasmic-override={overrides.title}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title
                  )}
                >
                  {"行业痛点"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame7"}
                  data-plasmic-override={overrides.frame7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame7)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字2"}
                    data-plasmic-override={overrides.文字2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame18"}
                      data-plasmic-override={overrides.frame18}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame18)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xQsQ7
                        )}
                      >
                        {"手工分拣费时费力"}
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ja1Fv
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <ol
                            className={classNames(
                              projectcss.all,
                              projectcss.ol,
                              sty.ol__vQZz
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__auqie
                              )}
                            >
                              {"烤烟量大且分拣人员有限，整体分拣效率低下 "}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__bHih
                              )}
                            >
                              {
                                "人工抽样分拣，样本难以覆盖全量，烤烟分拣准确率低"
                              }
                            </li>
                          </ol>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <div
                      data-plasmic-name={"image19"}
                      data-plasmic-override={overrides.image19}
                      className={classNames(projectcss.all, sty.image19)}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字3"}
                    data-plasmic-override={overrides.文字3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame19"}
                      data-plasmic-override={overrides.frame19}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame19)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___97M69
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "主观标准不统一"
                          : "主观标准不统一"}
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b3Sqn
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <ol
                            className={classNames(
                              projectcss.all,
                              projectcss.ol,
                              sty.ol___2XTY
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__hOor
                              )}
                            >
                              {
                                "分拣员主观的分拣标准不一致，难以实现标准化流程化"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__bnOKk
                              )}
                            >
                              {"涉及“人情烟”等分拣员徇私舞弊的情况"}
                            </li>
                          </ol>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <div
                      data-plasmic-name={"image20"}
                      data-plasmic-override={overrides.image20}
                      className={classNames(projectcss.all, sty.image20)}
                    />
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__s1Mda)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"客户案例"}
                data-plasmic-override={overrides.客户案例}
                hasGap={true}
                className={classNames(projectcss.all, sty.客户案例)}
              >
                <div
                  data-plasmic-name={"title2"}
                  data-plasmic-override={overrides.title2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title2
                  )}
                >
                  {"解决方案"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame12"}
                  data-plasmic-override={overrides.frame12}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame12)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"解决方案步骤"}
                    data-plasmic-override={overrides.解决方案步骤}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.解决方案步骤)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"number"}
                      data-plasmic-override={overrides.number}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.number)}
                    >
                      <div
                        data-plasmic-name={"tag2"}
                        data-plasmic-override={overrides.tag2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.tag2
                        )}
                      >
                        {"1"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"image"}
                      data-plasmic-override={overrides.image}
                      className={classNames(projectcss.all, sty.image)}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <p.PlasmicImg
                          data-plasmic-name={"img"}
                          data-plasmic-override={overrides.img}
                          alt={""}
                          className={classNames(sty.img)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("auto" as const)
                              : ("auto" as const)
                          }
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/寒芒/images/图像分割.png",
                            fullWidth: 480,
                            fullHeight: 352,
                            aspectRatio: undefined
                          }}
                        />
                      ) : null}
                    </div>

                    <div
                      data-plasmic-name={"title3"}
                      data-plasmic-override={overrides.title3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title3
                      )}
                    >
                      {"传统算法-图像分割"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"解决方案步骤2"}
                    data-plasmic-override={overrides.解决方案步骤2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.解决方案步骤2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"number2"}
                      data-plasmic-override={overrides.number2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.number2)}
                    >
                      <div
                        data-plasmic-name={"tag3"}
                        data-plasmic-override={overrides.tag3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.tag3
                        )}
                      >
                        {"2"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"image2"}
                      data-plasmic-override={overrides.image2}
                      className={classNames(projectcss.all, sty.image2)}
                    />

                    <div
                      data-plasmic-name={"title4"}
                      data-plasmic-override={overrides.title4}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title4
                      )}
                    >
                      {"烟叶数据采集"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"解决方案步骤3"}
                    data-plasmic-override={overrides.解决方案步骤3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.解决方案步骤3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"number3"}
                      data-plasmic-override={overrides.number3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.number3)}
                    >
                      <div
                        data-plasmic-name={"tag4"}
                        data-plasmic-override={overrides.tag4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.tag4
                        )}
                      >
                        {"3"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"image3"}
                      data-plasmic-override={overrides.image3}
                      className={classNames(projectcss.all, sty.image3)}
                    />

                    <div
                      data-plasmic-name={"title5"}
                      data-plasmic-override={overrides.title5}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title5
                      )}
                    >
                      {"自动化烤烟分拣的系统软件与算法实现"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"解决方案步骤4"}
                    data-plasmic-override={overrides.解决方案步骤4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.解决方案步骤4)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"number4"}
                      data-plasmic-override={overrides.number4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.number4)}
                    >
                      <div
                        data-plasmic-name={"tag5"}
                        data-plasmic-override={overrides.tag5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.tag5
                        )}
                      >
                        {"4"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"image4"}
                      data-plasmic-override={overrides.image4}
                      className={classNames(projectcss.all, sty.image4)}
                    />

                    <div
                      data-plasmic-name={"title6"}
                      data-plasmic-override={overrides.title6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title6
                      )}
                    >
                      {"模型量化加速，部署工控机"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"解决方案步骤5"}
                    data-plasmic-override={overrides.解决方案步骤5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.解决方案步骤5)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"number5"}
                      data-plasmic-override={overrides.number5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.number5)}
                    >
                      <div
                        data-plasmic-name={"tag6"}
                        data-plasmic-override={overrides.tag6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.tag6
                        )}
                      >
                        {"5"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"image5"}
                      data-plasmic-override={overrides.image5}
                      className={classNames(projectcss.all, sty.image5)}
                    />

                    <div
                      data-plasmic-name={"title7"}
                      data-plasmic-override={overrides.title7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title7
                      )}
                    >
                      {"完成自动化烟叶分拣"}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal___74DkD)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"成果展示"}
                data-plasmic-override={overrides.成果展示}
                hasGap={true}
                className={classNames(projectcss.all, sty.成果展示)}
              >
                <div
                  data-plasmic-name={"image21"}
                  data-plasmic-override={overrides.image21}
                  className={classNames(projectcss.all, sty.image21)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"right"}
                  data-plasmic-override={overrides.right}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.right)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"title9"}
                    data-plasmic-override={overrides.title9}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title9)}
                  >
                    <div
                      data-plasmic-name={"title8"}
                      data-plasmic-override={overrides.title8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title8
                      )}
                    >
                      {"成果展示"}
                    </div>

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <div
                        data-plasmic-name={"image8"}
                        data-plasmic-override={overrides.image8}
                        className={classNames(projectcss.all, sty.image8)}
                      />
                    ) : null}
                  </p.Stack>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__pji7P)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ktn2D)}
                    >
                      {true ? (
                        <Icon52Icon
                          className={classNames(projectcss.all, sty.svg__mu62X)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b8Kk
                        )}
                      >
                        {
                          "解决了烤烟分拣员凭借主观进行烟叶分拣存在的误判问题，实现系统化标准化流程化分拣"
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rhdGc
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0R26H
                      )}
                    >
                      {true ? (
                        <Icon53Icon
                          className={classNames(projectcss.all, sty.svg___50QQ)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lKizq
                        )}
                      >
                        {
                          "提升了整体分拣效率和分拣速度，从原本的分拣员抽样分拣到快速系统化全量化"
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rq9TU
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fesks)}
                    >
                      {true ? (
                        <Icon54Icon
                          className={classNames(projectcss.all, sty.svg__kSzut)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__miu95
                        )}
                      >
                        {"烤烟分拣分级准确率达到90%\r"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___84TUt
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__ib1Cg)}
              triggerOnce={true}
            >
              <p.Stack
                as={"section"}
                data-plasmic-name={"经济效益2"}
                data-plasmic-override={overrides.经济效益2}
                hasGap={true}
                className={classNames(projectcss.all, sty.经济效益2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__zqA5P)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ofsCg)}
                    >
                      <p.PlasmicImg
                        data-plasmic-name={"icon经济效益"}
                        data-plasmic-override={overrides.icon经济效益}
                        alt={""}
                        className={classNames(sty.icon经济效益)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/寒芒/images/icon经济效益.svg",
                          fullWidth: 133,
                          fullHeight: 150,
                          aspectRatio: 0.883495
                        }}
                      />

                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__uiWgP
                        )}
                      >
                        {"经济效益"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nYbJe
                        )}
                      >
                        {"economic efficiency"}
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__gYAcS)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7OmOq
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1MkuH
                        )}
                      >
                        <Icon10Icon
                          className={classNames(projectcss.all, sty.svg__vqnrA)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2HwlZ
                          )}
                        >
                          {"节省烤烟分拣人力"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__j9WV
                          )}
                        >
                          {"80%"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ykJb
                        )}
                      >
                        <Icon10Icon
                          className={classNames(projectcss.all, sty.svg__xt2Ex)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dnqaU
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "节省分析时长达"
                            : "缩短整体烤烟分拣时间"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wctJi
                          )}
                        >
                          {"80%"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gjvJj
                        )}
                      >
                        <Icon11Icon
                          className={classNames(projectcss.all, sty.svg__j3Zo7)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___93OTd
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "提升分析效率"
                            : "提升烤烟分拣准确率"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__liLZv
                          )}
                        >
                          {"90%"}
                        </div>
                      </p.Stack>
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <p.Stack
              as={"div"}
              data-plasmic-name={"box"}
              data-plasmic-override={overrides.box}
              hasGap={true}
              className={classNames(projectcss.all, sty.box)}
            />

            <Reveal
              className={classNames("__wab_instance", sty.reveal__qnntW)}
              triggerOnce={true}
            >
              <section
                data-plasmic-name={"竞争优势"}
                data-plasmic-override={overrides.竞争优势}
                className={classNames(projectcss.all, sty.竞争优势)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground"}
                  data-plasmic-override={overrides.foreground}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6OYm7)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ezIpo)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__yt3Xu
                        )}
                      >
                        {"竞争优势"}
                      </h2>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zwXec
                      )}
                    >
                      {"competitive advantage"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__cr7Mb)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__czFMn)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zYpKc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qb7N0
                          )}
                        >
                          <Icon21Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lCzJ5
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lI52
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__owKms
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__h1BoC
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__l8RSw
                            )}
                          >
                            {"响应快"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aIGq
                            )}
                          >
                            {"平台响应速度快，资源调度处理能力强"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1HMzE
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gq5SD
                          )}
                        >
                          <Icon18Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___35TZu
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zj8G
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2Oj5M
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__s60Ri
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wn4Pp
                            )}
                          >
                            {"准确率高，精度高"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8MPt
                            )}
                          >
                            {"分拣准确率、模型精度高达90%，远远高于手工分拣"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__on4Uh
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___50Atz
                          )}
                        >
                          <Icon15Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ufXbr
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cp47D
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pQ5PR
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5FCb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ncXYa
                            )}
                          >
                            {"硬件与系统优"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pVwCq
                            )}
                          >
                            {"硬件质量高，售后服务好，系统整体稳定性强"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sDaC9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aokum
                          )}
                        >
                          <Icon19Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__eOxQ4
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vzl0I
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wWz7S
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__abcYx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dUqBp
                            )}
                          >
                            {"创新"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xOsrz
                            )}
                          >
                            {
                              "具备比同行更创新的优化方案，用户可实现一键式分拣模型训练"
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </section>
            </Reveal>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "中烟",
    "navbar",
    "logo",
    "寒芒Logo",
    "logo2",
    "logoText",
    "导航",
    "button",
    "公司描述",
    "文字",
    "image9",
    "tag",
    "frame4",
    "业务领域",
    "title",
    "frame7",
    "文字2",
    "frame18",
    "image19",
    "文字3",
    "frame19",
    "image20",
    "客户案例",
    "title2",
    "frame12",
    "解决方案步骤",
    "number",
    "tag2",
    "image",
    "img",
    "title3",
    "解决方案步骤2",
    "number2",
    "tag3",
    "image2",
    "title4",
    "解决方案步骤3",
    "number3",
    "tag4",
    "image3",
    "title5",
    "解决方案步骤4",
    "number4",
    "tag5",
    "image4",
    "title6",
    "解决方案步骤5",
    "number5",
    "tag6",
    "image5",
    "title7",
    "成果展示",
    "image21",
    "right",
    "title9",
    "title8",
    "image8",
    "经济效益2",
    "foreground2",
    "icon经济效益",
    "box",
    "竞争优势",
    "foreground",
    "footer"
  ],
  中烟: [
    "中烟",
    "navbar",
    "logo",
    "寒芒Logo",
    "logo2",
    "logoText",
    "导航",
    "button",
    "公司描述",
    "文字",
    "image9",
    "tag",
    "frame4",
    "业务领域",
    "title",
    "frame7",
    "文字2",
    "frame18",
    "image19",
    "文字3",
    "frame19",
    "image20",
    "客户案例",
    "title2",
    "frame12",
    "解决方案步骤",
    "number",
    "tag2",
    "image",
    "img",
    "title3",
    "解决方案步骤2",
    "number2",
    "tag3",
    "image2",
    "title4",
    "解决方案步骤3",
    "number3",
    "tag4",
    "image3",
    "title5",
    "解决方案步骤4",
    "number4",
    "tag5",
    "image4",
    "title6",
    "解决方案步骤5",
    "number5",
    "tag6",
    "image5",
    "title7",
    "成果展示",
    "image21",
    "right",
    "title9",
    "title8",
    "image8",
    "经济效益2",
    "foreground2",
    "icon经济效益",
    "box",
    "竞争优势",
    "foreground",
    "footer"
  ],
  navbar: ["navbar", "logo", "寒芒Logo", "logo2", "logoText", "导航", "button"],
  logo: ["logo", "寒芒Logo", "logo2", "logoText"],
  寒芒Logo: ["寒芒Logo", "logo2"],
  logo2: ["logo2"],
  logoText: ["logoText"],
  导航: ["导航", "button"],
  button: ["button"],
  公司描述: ["公司描述", "文字", "image9", "tag", "frame4"],
  文字: ["文字", "image9", "tag"],
  image9: ["image9"],
  tag: ["tag"],
  frame4: ["frame4"],
  业务领域: [
    "业务领域",
    "title",
    "frame7",
    "文字2",
    "frame18",
    "image19",
    "文字3",
    "frame19",
    "image20"
  ],
  title: ["title"],
  frame7: [
    "frame7",
    "文字2",
    "frame18",
    "image19",
    "文字3",
    "frame19",
    "image20"
  ],
  文字2: ["文字2", "frame18", "image19"],
  frame18: ["frame18"],
  image19: ["image19"],
  文字3: ["文字3", "frame19", "image20"],
  frame19: ["frame19"],
  image20: ["image20"],
  客户案例: [
    "客户案例",
    "title2",
    "frame12",
    "解决方案步骤",
    "number",
    "tag2",
    "image",
    "img",
    "title3",
    "解决方案步骤2",
    "number2",
    "tag3",
    "image2",
    "title4",
    "解决方案步骤3",
    "number3",
    "tag4",
    "image3",
    "title5",
    "解决方案步骤4",
    "number4",
    "tag5",
    "image4",
    "title6",
    "解决方案步骤5",
    "number5",
    "tag6",
    "image5",
    "title7"
  ],
  title2: ["title2"],
  frame12: [
    "frame12",
    "解决方案步骤",
    "number",
    "tag2",
    "image",
    "img",
    "title3",
    "解决方案步骤2",
    "number2",
    "tag3",
    "image2",
    "title4",
    "解决方案步骤3",
    "number3",
    "tag4",
    "image3",
    "title5",
    "解决方案步骤4",
    "number4",
    "tag5",
    "image4",
    "title6",
    "解决方案步骤5",
    "number5",
    "tag6",
    "image5",
    "title7"
  ],
  解决方案步骤: ["解决方案步骤", "number", "tag2", "image", "img", "title3"],
  number: ["number", "tag2"],
  tag2: ["tag2"],
  image: ["image", "img"],
  img: ["img"],
  title3: ["title3"],
  解决方案步骤2: ["解决方案步骤2", "number2", "tag3", "image2", "title4"],
  number2: ["number2", "tag3"],
  tag3: ["tag3"],
  image2: ["image2"],
  title4: ["title4"],
  解决方案步骤3: ["解决方案步骤3", "number3", "tag4", "image3", "title5"],
  number3: ["number3", "tag4"],
  tag4: ["tag4"],
  image3: ["image3"],
  title5: ["title5"],
  解决方案步骤4: ["解决方案步骤4", "number4", "tag5", "image4", "title6"],
  number4: ["number4", "tag5"],
  tag5: ["tag5"],
  image4: ["image4"],
  title6: ["title6"],
  解决方案步骤5: ["解决方案步骤5", "number5", "tag6", "image5", "title7"],
  number5: ["number5", "tag6"],
  tag6: ["tag6"],
  image5: ["image5"],
  title7: ["title7"],
  成果展示: ["成果展示", "image21", "right", "title9", "title8", "image8"],
  image21: ["image21"],
  right: ["right", "title9", "title8", "image8"],
  title9: ["title9", "title8", "image8"],
  title8: ["title8"],
  image8: ["image8"],
  经济效益2: ["经济效益2", "foreground2", "icon经济效益"],
  foreground2: ["foreground2", "icon经济效益"],
  icon经济效益: ["icon经济效益"],
  box: ["box"],
  竞争优势: ["竞争优势", "foreground"],
  foreground: ["foreground"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  中烟: "div";
  navbar: "div";
  logo: "div";
  寒芒Logo: "div";
  logo2: "div";
  logoText: "div";
  导航: "div";
  button: typeof Button;
  公司描述: "div";
  文字: "div";
  image9: "div";
  tag: "div";
  frame4: "div";
  业务领域: "div";
  title: "div";
  frame7: "div";
  文字2: "div";
  frame18: "div";
  image19: "div";
  文字3: "div";
  frame19: "div";
  image20: "div";
  客户案例: "div";
  title2: "div";
  frame12: "div";
  解决方案步骤: "div";
  number: "div";
  tag2: "div";
  image: "div";
  img: typeof p.PlasmicImg;
  title3: "div";
  解决方案步骤2: "div";
  number2: "div";
  tag3: "div";
  image2: "div";
  title4: "div";
  解决方案步骤3: "div";
  number3: "div";
  tag4: "div";
  image3: "div";
  title5: "div";
  解决方案步骤4: "div";
  number4: "div";
  tag5: "div";
  image4: "div";
  title6: "div";
  解决方案步骤5: "div";
  number5: "div";
  tag6: "div";
  image5: "div";
  title7: "div";
  成果展示: "div";
  image21: "div";
  right: "div";
  title9: "div";
  title8: "div";
  image8: "div";
  经济效益2: "section";
  foreground2: "div";
  icon经济效益: typeof p.PlasmicImg;
  box: "div";
  竞争优势: "section";
  foreground: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic中烟__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic中烟__VariantsArgs;
    args?: Plasmic中烟__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic中烟__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmic中烟__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic中烟__ArgProps,
          internalVariantPropNames: Plasmic中烟__VariantProps
        }),
      [props, nodeName]
    );

    return Plasmic中烟__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic中烟";
  } else {
    func.displayName = `Plasmic中烟.${nodeName}`;
  }
  return func;
}

export const Plasmic中烟 = Object.assign(
  // Top-level Plasmic中烟 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    中烟: makeNodeComponent("中烟"),
    navbar: makeNodeComponent("navbar"),
    logo: makeNodeComponent("logo"),
    寒芒Logo: makeNodeComponent("寒芒Logo"),
    logo2: makeNodeComponent("logo2"),
    logoText: makeNodeComponent("logoText"),
    导航: makeNodeComponent("导航"),
    button: makeNodeComponent("button"),
    公司描述: makeNodeComponent("公司描述"),
    文字: makeNodeComponent("文字"),
    image9: makeNodeComponent("image9"),
    tag: makeNodeComponent("tag"),
    frame4: makeNodeComponent("frame4"),
    业务领域: makeNodeComponent("业务领域"),
    title: makeNodeComponent("title"),
    frame7: makeNodeComponent("frame7"),
    文字2: makeNodeComponent("文字2"),
    frame18: makeNodeComponent("frame18"),
    image19: makeNodeComponent("image19"),
    文字3: makeNodeComponent("文字3"),
    frame19: makeNodeComponent("frame19"),
    image20: makeNodeComponent("image20"),
    客户案例: makeNodeComponent("客户案例"),
    title2: makeNodeComponent("title2"),
    frame12: makeNodeComponent("frame12"),
    解决方案步骤: makeNodeComponent("解决方案步骤"),
    number: makeNodeComponent("number"),
    tag2: makeNodeComponent("tag2"),
    image: makeNodeComponent("image"),
    img: makeNodeComponent("img"),
    title3: makeNodeComponent("title3"),
    解决方案步骤2: makeNodeComponent("解决方案步骤2"),
    number2: makeNodeComponent("number2"),
    tag3: makeNodeComponent("tag3"),
    image2: makeNodeComponent("image2"),
    title4: makeNodeComponent("title4"),
    解决方案步骤3: makeNodeComponent("解决方案步骤3"),
    number3: makeNodeComponent("number3"),
    tag4: makeNodeComponent("tag4"),
    image3: makeNodeComponent("image3"),
    title5: makeNodeComponent("title5"),
    解决方案步骤4: makeNodeComponent("解决方案步骤4"),
    number4: makeNodeComponent("number4"),
    tag5: makeNodeComponent("tag5"),
    image4: makeNodeComponent("image4"),
    title6: makeNodeComponent("title6"),
    解决方案步骤5: makeNodeComponent("解决方案步骤5"),
    number5: makeNodeComponent("number5"),
    tag6: makeNodeComponent("tag6"),
    image5: makeNodeComponent("image5"),
    title7: makeNodeComponent("title7"),
    成果展示: makeNodeComponent("成果展示"),
    image21: makeNodeComponent("image21"),
    right: makeNodeComponent("right"),
    title9: makeNodeComponent("title9"),
    title8: makeNodeComponent("title8"),
    image8: makeNodeComponent("image8"),
    经济效益2: makeNodeComponent("经济效益2"),
    foreground2: makeNodeComponent("foreground2"),
    icon经济效益: makeNodeComponent("icon经济效益"),
    box: makeNodeComponent("box"),
    竞争优势: makeNodeComponent("竞争优势"),
    foreground: makeNodeComponent("foreground"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for Plasmic中烟
    internalVariantProps: Plasmic中烟__VariantProps,
    internalArgProps: Plasmic中烟__ArgProps
  }
);

export default Plasmic中烟;
/* prettier-ignore-end */
