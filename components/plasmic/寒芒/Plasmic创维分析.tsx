// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7jQgmBmKYyCbHXSekk2FRy
// Component: 9bi_dSFUsP
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: w7EiyFeNrat/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import Footer from "../../Footer"; // plasmic-import: ZF4Tnw-zFby/component

import { useScreenVariants as useScreenVariantskJp4EfKscK4Tw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kJp4efKscK4Tw/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_寒芒.module.css"; // plasmic-import: 7jQgmBmKYyCbHXSekk2FRy/projectcss
import sty from "./Plasmic创维分析.module.css"; // plasmic-import: 9bi_dSFUsP/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: jxcxtzGjitd/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 61HpChsnqny/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: cM1aNF6tRS/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: Gpt2heJ7Rp/icon
import Icon43Icon from "./icons/PlasmicIcon__Icon43"; // plasmic-import: Ric9p4bc--/icon
import Icon44Icon from "./icons/PlasmicIcon__Icon44"; // plasmic-import: pJJhaOrkA2/icon
import Icon45Icon from "./icons/PlasmicIcon__Icon45"; // plasmic-import: jx4uod5V0i/icon
import Icon46Icon from "./icons/PlasmicIcon__Icon46"; // plasmic-import: plIVZoPm-D/icon
import Icon27Icon from "./icons/PlasmicIcon__Icon27"; // plasmic-import: NvR6eUVco8/icon
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: qO_UVpfk2WP/icon
import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: X-CvFO8F2r/icon
import Icon30Icon from "./icons/PlasmicIcon__Icon30"; // plasmic-import: zXyt0yWgJu/icon
import Icon26Icon from "./icons/PlasmicIcon__Icon26"; // plasmic-import: 6aG-2pzvt7A/icon
import Devicedatabase2LineIcon from "./icons/PlasmicIcon__Devicedatabase2Line"; // plasmic-import: OedXNTZ2ZnR/icon
import Icon55Icon from "./icons/PlasmicIcon__Icon55"; // plasmic-import: uQste6Kn5J/icon
import Icon56Icon from "./icons/PlasmicIcon__Icon56"; // plasmic-import: YCDW6_AWxH/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: fTEoi4xtkr/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: CPrZBowKmb/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: MnPSDNx1dHt/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: AVvOQiMFXTC/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: m976a1WZe1/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: xPXMlJZnbQ/icon
import WeatherflashlightLineIcon from "./icons/PlasmicIcon__WeatherflashlightLine"; // plasmic-import: qH29eMYbTl2/icon
import BusinesslineChartLineIcon from "./icons/PlasmicIcon__BusinesslineChartLine"; // plasmic-import: pB0CSzngXCB/icon
import BusinessmedalLineIcon from "./icons/PlasmicIcon__BusinessmedalLine"; // plasmic-import: GAoyXTwHBHG/icon
import OtherslightbulbLineIcon from "./icons/PlasmicIcon__OtherslightbulbLine"; // plasmic-import: gFkvKUhlV5/icon
import SystemcheckboxCircleLineIcon from "./icons/PlasmicIcon__SystemcheckboxCircleLine"; // plasmic-import: WXXDd3z6y7/icon

export type Plasmic创维分析__VariantMembers = {};

export type Plasmic创维分析__VariantsArgs = {};
type VariantPropType = keyof Plasmic创维分析__VariantsArgs;
export const Plasmic创维分析__VariantProps = new Array<VariantPropType>();

export type Plasmic创维分析__ArgsType = {};
type ArgPropType = keyof Plasmic创维分析__ArgsType;
export const Plasmic创维分析__ArgProps = new Array<ArgPropType>();

export type Plasmic创维分析__OverridesType = {
  root?: p.Flex<"div">;
  content?: p.Flex<"div">;
  navbar?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  寒芒Logo?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  logoText?: p.Flex<"div">;
  button?: p.Flex<typeof Button>;
  公司描述?: p.Flex<"div">;
  文字?: p.Flex<"div">;
  image9?: p.Flex<"div">;
  tag?: p.Flex<"div">;
  image?: p.Flex<"div">;
  业务领域?: p.Flex<"div">;
  image24?: p.Flex<"div">;
  frame28?: p.Flex<"div">;
  title?: p.Flex<"div">;
  frame29?: p.Flex<"div">;
  无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案?: p.Flex<"div">;
  擅长?: p.Flex<"div">;
  切换?: p.Flex<"div">;
  切换2?: p.Flex<"div">;
  text2?: p.Flex<"div">;
  切换3?: p.Flex<"div">;
  text3?: p.Flex<"div">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  frame35?: p.Flex<"div">;
  title5?: p.Flex<"div">;
  成果展示?: p.Flex<"div">;
  成果1?: p.Flex<"div">;
  image20?: p.Flex<"div">;
  文字3?: p.Flex<"div">;
  成果?: p.Flex<"div">;
  title3?: p.Flex<"div">;
  image8?: p.Flex<"div">;
  经济效益?: p.Flex<"div">;
  left?: p.Flex<"div">;
  text4?: p.Flex<"div">;
  data?: p.Flex<"div">;
  节省烤烟分拣员人力?: p.Flex<"div">;
  data2?: p.Flex<"div">;
  节省烤烟分拣员人力2?: p.Flex<"div">;
  _80?: p.Flex<"div">;
  data3?: p.Flex<"div">;
  节省烤烟分拣员人力3?: p.Flex<"div">;
  data4?: p.Flex<"div">;
  节省烤烟分拣员人力4?: p.Flex<"div">;
  _802?: p.Flex<"div">;
  data5?: p.Flex<"div">;
  节省烤烟分拣员人力5?: p.Flex<"div">;
  _803?: p.Flex<"div">;
  经济效益2?: p.Flex<"section">;
  foreground2?: p.Flex<"div">;
  icon经济效益?: p.Flex<typeof p.PlasmicImg>;
  竞争优势?: p.Flex<"section">;
  foreground?: p.Flex<"div">;
  擅长技术栈?: p.Flex<"div">;
  title4?: p.Flex<"div">;
  frame8?: p.Flex<"div">;
  文字4?: p.Flex<"div">;
  文字5?: p.Flex<"div">;
  文字6?: p.Flex<"div">;
  文字7?: p.Flex<"div">;
  文字8?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface Default创维分析Props {}

function Plasmic创维分析__RenderFunc(props: {
  variants: Plasmic创维分析__VariantsArgs;
  args: Plasmic创维分析__ArgsType;
  overrides: Plasmic创维分析__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskJp4EfKscK4Tw()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"创维集团自动化营收预测分析平台"}</title>

        <meta
          key="og:title"
          property="og:title"
          content={"创维集团自动化营收预测分析平台"}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"创维集团自动化营收预测分析平台"}
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/1fae96651ac584aea60c5bf70fd21a78.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/1fae96651ac584aea60c5bf70fd21a78.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"content"}
            data-plasmic-override={overrides.content}
            className={classNames(projectcss.all, sty.content)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              hasGap={true}
              className={classNames(projectcss.all, sty.navbar)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"logo"}
                data-plasmic-override={overrides.logo}
                hasGap={true}
                className={classNames(projectcss.all, sty.logo)}
              >
                <div
                  data-plasmic-name={"寒芒Logo"}
                  data-plasmic-override={overrides.寒芒Logo}
                  className={classNames(projectcss.all, sty.寒芒Logo)}
                >
                  <div
                    data-plasmic-name={"logo2"}
                    data-plasmic-override={overrides.logo2}
                    className={classNames(projectcss.all, sty.logo2)}
                  />
                </div>

                {true ? (
                  <div
                    data-plasmic-name={"logoText"}
                    data-plasmic-override={overrides.logoText}
                    className={classNames(projectcss.all, sty.logoText)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yPXb2
                      )}
                    >
                      {"寒芒科技"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8XZrI
                      )}
                    >
                      {"HanMang Technology"}
                    </div>
                  </div>
                ) : null}
              </p.Stack>

              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
                link={"/" as const}
              >
                {"返回首页"}
              </Button>
            </p.Stack>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__rhH0A)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"公司描述"}
                data-plasmic-override={overrides.公司描述}
                hasGap={true}
                className={classNames(projectcss.all, sty.公司描述)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"文字"}
                  data-plasmic-override={overrides.文字}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.文字)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      data-plasmic-name={"image9"}
                      data-plasmic-override={overrides.image9}
                      className={classNames(projectcss.all, sty.image9)}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l1VQ
                    )}
                  >
                    {"创维集团自动化营收预测分析平台"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"tag"}
                    data-plasmic-override={overrides.tag}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.tag)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xw5WR
                      )}
                    >
                      {"#商业化解决方案领域"}
                    </div>
                  </p.Stack>

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dBi2H
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <ol
                            className={classNames(
                              projectcss.all,
                              projectcss.ol,
                              sty.ol__jNxw
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___7Euj5
                              )}
                            >
                              {
                                "企业每个年度、半年度、季度、月度都需要更新设置目标值，数据分析师和财务工作任务重；"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__n7AFn
                              )}
                            >
                              {
                                "业务分析师需要对当年、半年度、季度、月度的营收、业务表现、用户画像、关键指标进行分析，整体数据分析压力大；"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__mYp7D
                              )}
                            >
                              {
                                "数据分析师人工进行数据下钻和和归因分析，分析成本高。"
                              }
                            </li>
                          </ol>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox___9Jhey)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bnor6)}
                    >
                      {true ? (
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__jBvxX)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1S9B
                        )}
                      >
                        {
                          "企业每个年度、半年度、季度、月度都需要更新设置目标值，数据分析师和财务工作任务重。"
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__q4S4K
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ikiOb)}
                    >
                      {true ? (
                        <Icon22Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7OrAn
                          )}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iJx0R
                        )}
                      >
                        {
                          "业务分析师需要对当年、半年度、季度、月度的营收、业务表现、用户画像、关键指标进行分析，整体数据分析压力大。"
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4BvfX
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uIuq3)}
                    >
                      {true ? (
                        <Icon43Icon
                          className={classNames(projectcss.all, sty.svg__fjOmC)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nqDI
                        )}
                      >
                        {"数据分析师人工进行数据下钻和和归因分析，分析成本高。"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fhwI5
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"image"}
                  data-plasmic-override={overrides.image}
                  className={classNames(projectcss.all, sty.image)}
                />
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__pgwmH)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"业务领域"}
                data-plasmic-override={overrides.业务领域}
                hasGap={true}
                className={classNames(projectcss.all, sty.业务领域)}
              >
                <div
                  data-plasmic-name={"image24"}
                  data-plasmic-override={overrides.image24}
                  className={classNames(projectcss.all, sty.image24)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame28"}
                  data-plasmic-override={overrides.frame28}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame28)}
                >
                  <div
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title
                    )}
                  >
                    {"行业痛点"}
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__sUt3J)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__m22Ff)}
                    >
                      {true ? (
                        <Icon44Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___1Ctim
                          )}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qanoU
                        )}
                      >
                        {"无法自动化生成贴合企业实际情况合适的经营目标。\r"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__z3Dv
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yD5Ny)}
                    >
                      {true ? (
                        <Icon45Icon
                          className={classNames(projectcss.all, sty.svg__kwQps)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xgMgu
                        )}
                      >
                        {"无法自动化生成经营分析报告，进行自动化的归因分析。\r"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__smKio
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nSYtg)}
                    >
                      {true ? (
                        <Icon46Icon
                          className={classNames(projectcss.all, sty.svg__bdJbT)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eNdy
                        )}
                      >
                        {
                          "无法自动化异常数据监控和数据分析并提供系统建议的解决方案。\r"
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xwt8C
                          )}
                        >
                          {"90%"}
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame29"}
                      data-plasmic-override={overrides.frame29}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame29)}
                    >
                      <div
                        data-plasmic-name={
                          "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案"
                        }
                        data-plasmic-override={
                          overrides.无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <ol
                              className={classNames(
                                projectcss.all,
                                projectcss.ol,
                                sty.ol__chNW
                              )}
                            >
                              <li
                                className={classNames(
                                  projectcss.all,
                                  projectcss.li,
                                  projectcss.__wab_text,
                                  sty.li__mcyHx
                                )}
                              >
                                {
                                  "无法自动化生成贴合企业实际情况合适的经营目标\r"
                                }
                              </li>

                              <li
                                className={classNames(
                                  projectcss.all,
                                  projectcss.li,
                                  projectcss.__wab_text,
                                  sty.li__ylAi
                                )}
                              >
                                {
                                  "无法自动化生成经营分析报告，进行自动化的归因分析\r"
                                }
                              </li>

                              <li
                                className={classNames(
                                  projectcss.all,
                                  projectcss.li,
                                  projectcss.__wab_text,
                                  sty.li__ggMyn
                                )}
                              >
                                {
                                  "无法自动化异常数据监控和数据分析并提供系统建议的解决方案\r"
                                }
                              </li>
                            </ol>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>

                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"擅长"}
                          data-plasmic-override={overrides.擅长}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.擅长)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"切换"}
                            data-plasmic-override={overrides.切换}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.切换)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mO6R
                              )}
                            >
                              {"技术门槛高"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"切换2"}
                            data-plasmic-override={overrides.切换2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.切换2)}
                          >
                            <div
                              data-plasmic-name={"text2"}
                              data-plasmic-override={overrides.text2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text2
                              )}
                            >
                              {"独立开发成本高"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"切换3"}
                            data-plasmic-override={overrides.切换3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.切换3)}
                          >
                            <div
                              data-plasmic-name={"text3"}
                              data-plasmic-override={overrides.text3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text3
                              )}
                            >
                              {"不利于快速商业化"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__sU9O1)}
              triggerOnce={true}
            >
              <section
                data-plasmic-name={"section"}
                data-plasmic-override={overrides.section}
                className={classNames(projectcss.all, sty.section)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground3"}
                  data-plasmic-override={overrides.foreground3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__q3Wtl)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gEUk)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame35"}
                        data-plasmic-override={overrides.frame35}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame35)}
                      >
                        <div
                          data-plasmic-name={"title5"}
                          data-plasmic-override={overrides.title5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.title5
                          )}
                        >
                          {"解决方案"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kadud)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__peA2L)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mecSm
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mRkwF
                          )}
                        >
                          <Icon27Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___694G
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dBavr
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bOsnF
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lG7Wo
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qbleh
                            )}
                          >
                            {"独立的报表系统"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__o6Bs9
                            )}
                          >
                            {
                              "基于大数据平台和ERP系统搭建独立的报表系统，生成贴合企业实际生产情况的经营报表。"
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lllLu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vjaqH
                          )}
                        >
                          <Icon29Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cpbTq
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cZ4Rv
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__x76Mr
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fh7Fq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qQc6
                            )}
                          >
                            {"自主分析工具"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rh3Cn
                            )}
                          >
                            {
                              "基于大数据平台和ERP系统搭建自主分析工具，自动化生成周期性的经营分析报告，并进行预警数据进行自动归因分析。"
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ydAi
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gP1Vy
                          )}
                        >
                          <Icon30Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rfYxU
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jgegg
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iVxKj
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eIekE
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mZjsu
                            )}
                          >
                            {"智能数据分析模型"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0Lo
                            )}
                          >
                            {
                              "基于大数据平台和ERP系统并结合算法能力提供更智能的数据分析模型，节省分析师人力，提升分析效率及准确率，并可持续性优化分析模型\r。"
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dMNo)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0V3Ak
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ou0Ib
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__daUMr
                            )}
                          >
                            <Icon26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__o8RPk
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fMUf
                              )}
                            >
                              <Icon9Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__akyRo
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__clo8R
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ilHzF
                              )}
                            >
                              {"呈现类型多样"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__dD49B
                              )}
                            >
                              {
                                "自动识别数据之间的关联性，推荐相应的呈现方式，满足趋势规律对比及数字对比"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vzKak
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wxmgj
                            )}
                          >
                            <Icon26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__j93
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wQBgW
                              )}
                            >
                              <Icon9Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__dkewA
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dQh6U
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0Tqly
                              )}
                            >
                              {"多维度"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wtLWs
                              )}
                            >
                              {
                                "可针对相同数据设置不同维度呈现对比，满足多样化的监测需求"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mQuNp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__j7Fyo
                            )}
                          >
                            <Icon26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rncAx
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1N2X3
                              )}
                            >
                              <Icon9Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fuu2V
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7MbJ
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sqMtE
                              )}
                            >
                              {"自定义组件"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__z7GsC
                              )}
                            >
                              {
                                "可根据需求进行组件自定义配置，丰富企业个性化的组件库及分析形势"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  ) : null}
                </p.Stack>
              </section>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__nCt8G)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"成果展示"}
                data-plasmic-override={overrides.成果展示}
                hasGap={true}
                className={classNames(projectcss.all, sty.成果展示)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"成果1"}
                  data-plasmic-override={overrides.成果1}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.成果1)}
                >
                  <div
                    data-plasmic-name={"image20"}
                    data-plasmic-override={overrides.image20}
                    className={classNames(projectcss.all, sty.image20)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字3"}
                    data-plasmic-override={overrides.文字3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"成果"}
                      data-plasmic-override={overrides.成果}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.成果)}
                    >
                      <div
                        data-plasmic-name={"title3"}
                        data-plasmic-override={overrides.title3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.title3
                        )}
                      >
                        {"成果展示"}
                      </div>

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <div
                          data-plasmic-name={"image8"}
                          data-plasmic-override={overrides.image8}
                          className={classNames(projectcss.all, sty.image8)}
                        />
                      ) : null}
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__aqrYj)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oZpm2
                        )}
                      >
                        {true ? (
                          <Devicedatabase2LineIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jlkvf
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__o4Eio
                          )}
                        >
                          {
                            "指标库管理系统-实现将公司全平台数据指标定义、口径、计算逻辑进行统一管理，支持数据指标的增删改查\r"
                          }
                        </div>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zMon
                            )}
                          >
                            {"90%"}
                          </div>
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zOd8
                        )}
                      >
                        {true ? (
                          <Icon45Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__msvBw
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ugFry
                          )}
                        >
                          {
                            "企业级目标值和预测值的系统化产出-基于营收历史数据的趋势分析和平滑求解最贴合企业实际情况的目标值和预测值\r"
                          }
                        </div>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eYwJi
                            )}
                          >
                            {"90%"}
                          </div>
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eo1Dt
                        )}
                      >
                        {true ? (
                          <Icon55Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lcmAe
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__idNu8
                          )}
                        >
                          {
                            "监控板块-当出现营收数据和业务数据异常波动时，快速预警\r"
                          }
                        </div>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rFwvX
                            )}
                          >
                            {"90%"}
                          </div>
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aeQ7M
                        )}
                      >
                        {true ? (
                          <Icon56Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__eAy3N
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wAxzp
                          )}
                        >
                          {
                            "分析板块-对数据异常波动的原因进行系统化自助归因分析并提供优化策略和解决方案\r"
                          }
                        </div>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__y6PB
                            )}
                          >
                            {"90%"}
                          </div>
                        ) : null}
                      </p.Stack>
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </Reveal>

            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"经济效益"}
                data-plasmic-override={overrides.经济效益}
                hasGap={true}
                className={classNames(projectcss.all, sty.经济效益)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"left"}
                  data-plasmic-override={overrides.left}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.left)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jWzl3
                    )}
                  >
                    {"经济效益"}
                  </div>

                  <div
                    data-plasmic-name={"text4"}
                    data-plasmic-override={overrides.text4}
                    className={classNames(projectcss.all, sty.text4)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"data"}
                      data-plasmic-override={overrides.data}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.data)}
                    >
                      <div
                        data-plasmic-name={"节省烤烟分拣员人力"}
                        data-plasmic-override={overrides.节省烤烟分拣员人力}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.节省烤烟分拣员人力
                        )}
                      >
                        {"节省企业分析师人力"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___353AY
                        )}
                      >
                        {"80%"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"data2"}
                      data-plasmic-override={overrides.data2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.data2)}
                    >
                      <div
                        data-plasmic-name={"节省烤烟分拣员人力2"}
                        data-plasmic-override={overrides.节省烤烟分拣员人力2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.节省烤烟分拣员人力2
                        )}
                      >
                        {"节省分析时长达"}
                      </div>

                      <div
                        data-plasmic-name={"_80"}
                        data-plasmic-override={overrides._80}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty._80
                        )}
                      >
                        {"90%"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"data3"}
                      data-plasmic-override={overrides.data3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.data3)}
                    >
                      <div
                        data-plasmic-name={"节省烤烟分拣员人力3"}
                        data-plasmic-override={overrides.节省烤烟分拣员人力3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.节省烤烟分拣员人力3
                        )}
                      >
                        {"提升分析效率"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s1X1T
                        )}
                      >
                        {"80%"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"data4"}
                      data-plasmic-override={overrides.data4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.data4)}
                    >
                      <div
                        data-plasmic-name={"节省烤烟分拣员人力4"}
                        data-plasmic-override={overrides.节省烤烟分拣员人力4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.节省烤烟分拣员人力4
                        )}
                      >
                        {"数据准确率"}
                      </div>

                      <div
                        data-plasmic-name={"_802"}
                        data-plasmic-override={overrides._802}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty._802
                        )}
                      >
                        {"98%"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"data5"}
                      data-plasmic-override={overrides.data5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.data5)}
                    >
                      <div
                        data-plasmic-name={"节省烤烟分拣员人力5"}
                        data-plasmic-override={overrides.节省烤烟分拣员人力5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.节省烤烟分拣员人力5
                        )}
                      >
                        {"策略有效性可达"}
                      </div>

                      <div
                        data-plasmic-name={"_803"}
                        data-plasmic-override={overrides._803}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty._803
                        )}
                      >
                        {"85%"}
                      </div>
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}

            <Reveal
              className={classNames("__wab_instance", sty.reveal__fflye)}
              triggerOnce={true}
            >
              <p.Stack
                as={"section"}
                data-plasmic-name={"经济效益2"}
                data-plasmic-override={overrides.经济效益2}
                hasGap={true}
                className={classNames(projectcss.all, sty.经济效益2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__e0Gud)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ikX33)}
                    >
                      <p.PlasmicImg
                        data-plasmic-name={"icon经济效益"}
                        data-plasmic-override={overrides.icon经济效益}
                        alt={""}
                        className={classNames(sty.icon经济效益)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/寒芒/images/icon经济效益.svg",
                          fullWidth: 133,
                          fullHeight: 150,
                          aspectRatio: 0.883495
                        }}
                      />

                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2___3Uq7Q
                        )}
                      >
                        {"经济效益"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__n8JaF
                        )}
                      >
                        {"economic efficiency"}
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__goz8K)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rrGgm)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__m9Fzw
                        )}
                      >
                        <Icon10Icon
                          className={classNames(projectcss.all, sty.svg__jr7Iu)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0GCvB
                          )}
                        >
                          {"节省企业分析师人力"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5JjYr
                          )}
                        >
                          {"90%"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qhOAo
                        )}
                      >
                        <Icon10Icon
                          className={classNames(projectcss.all, sty.svg__cik4D)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rMyS
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "节省分析时长达"
                            : "节省分析时长达"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iOqI
                          )}
                        >
                          {"90%"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vBaNx
                        )}
                      >
                        <Icon11Icon
                          className={classNames(projectcss.all, sty.svg__o2Ef6)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6Uq4T
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "提升分析效率"
                            : "提升分析效率"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kavul
                          )}
                        >
                          {"80%"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dtd03
                        )}
                      >
                        <Icon11Icon
                          className={classNames(projectcss.all, sty.svg__nnrrd)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6A4H2
                          )}
                        >
                          {"数据准确率"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bj8MR
                          )}
                        >
                          {"98%"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__o4Cls
                        )}
                      >
                        <Icon11Icon
                          className={classNames(projectcss.all, sty.svg__v5FyG)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fF0ID
                          )}
                        >
                          {"策略有效性可达"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tvGc
                          )}
                        >
                          {"85%"}
                        </div>
                      </p.Stack>
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <div className={classNames(projectcss.all, sty.freeBox__yM4N)} />

            <Reveal
              className={classNames("__wab_instance", sty.reveal__qYuWl)}
              triggerOnce={true}
            >
              <section
                data-plasmic-name={"竞争优势"}
                data-plasmic-override={overrides.竞争优势}
                className={classNames(projectcss.all, sty.竞争优势)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground"}
                  data-plasmic-override={overrides.foreground}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jny6P)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox___7Nu)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__skPjP
                        )}
                      >
                        {"竞争优势"}
                      </h2>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q2IWb
                      )}
                    >
                      {"competitive advantage"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__r42Vq)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uMsTx)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__awEud
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zlAe0
                          )}
                        >
                          <Icon21Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__s3RV0
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__irdhR
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mygzo
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mVdcG
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__g9D2I
                            )}
                          >
                            {"响应快"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hwLjh
                            )}
                          >
                            {"平台响应速度快，资源调度处理能力强"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ex271
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__x3RS9
                          )}
                        >
                          <Icon18Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tDjhs
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jZxsU
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tsOpb
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__csftp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gyIy
                            )}
                          >
                            {"准确率高"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pTmsC
                            )}
                          >
                            {"自动化营收数据准确率高，营收预测准确率高"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aCqHr
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lxB5N
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gnQ7E
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eBq7
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___4Epyi
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__icVQj
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aqP4D
                            )}
                          >
                            {"策略优"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mjZkz
                            )}
                          >
                            {"营收预测策略有效率高于同行业"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ls5Sw
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aYvAn
                          )}
                        >
                          <Icon12Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qxqmO
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___6TFju
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vKZq1
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pk2Gh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8Hw6N
                            )}
                          >
                            {"体验好"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yaVcQ
                            )}
                          >
                            {"交互体验和用户满意度高于同行业"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </section>
            </Reveal>

            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"擅长技术栈"}
                data-plasmic-override={overrides.擅长技术栈}
                hasGap={true}
                className={classNames(projectcss.all, sty.擅长技术栈)}
              >
                <div
                  data-plasmic-name={"title4"}
                  data-plasmic-override={overrides.title4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title4
                  )}
                >
                  {"竞争优势"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame8"}
                  data-plasmic-override={overrides.frame8}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame8)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字4"}
                    data-plasmic-override={overrides.文字4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字4)}
                  >
                    <WeatherflashlightLineIcon
                      className={classNames(projectcss.all, sty.svg__wtypg)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6TXt
                      )}
                    >
                      {"平台的响应速度快，资源调度处理能力强"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字5"}
                    data-plasmic-override={overrides.文字5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字5)}
                  >
                    <BusinesslineChartLineIcon
                      className={classNames(projectcss.all, sty.svg___2NlVm)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bm1Na
                      )}
                    >
                      {"数据准确率高"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字6"}
                    data-plasmic-override={overrides.文字6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字6)}
                  >
                    <BusinessmedalLineIcon
                      className={classNames(projectcss.all, sty.svg___5NqjR)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uJLqk
                      )}
                    >
                      {"预测准确率高"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字7"}
                    data-plasmic-override={overrides.文字7}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字7)}
                  >
                    <OtherslightbulbLineIcon
                      className={classNames(projectcss.all, sty.svg__bcmR)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8No6E
                      )}
                    >
                      {"策略有效性高于同行业"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"文字8"}
                    data-plasmic-override={overrides.文字8}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.文字8)}
                  >
                    <SystemcheckboxCircleLineIcon
                      className={classNames(projectcss.all, sty.svg__lxbKt)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rcDbo
                      )}
                    >
                      {"交互体验和用户满意度高于同行业"}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            ) : null}

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "content",
    "navbar",
    "logo",
    "寒芒Logo",
    "logo2",
    "logoText",
    "button",
    "公司描述",
    "文字",
    "image9",
    "tag",
    "image",
    "业务领域",
    "image24",
    "frame28",
    "title",
    "frame29",
    "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案",
    "擅长",
    "切换",
    "切换2",
    "text2",
    "切换3",
    "text3",
    "section",
    "foreground3",
    "frame35",
    "title5",
    "成果展示",
    "成果1",
    "image20",
    "文字3",
    "成果",
    "title3",
    "image8",
    "经济效益",
    "left",
    "text4",
    "data",
    "节省烤烟分拣员人力",
    "data2",
    "节省烤烟分拣员人力2",
    "_80",
    "data3",
    "节省烤烟分拣员人力3",
    "data4",
    "节省烤烟分拣员人力4",
    "_802",
    "data5",
    "节省烤烟分拣员人力5",
    "_803",
    "经济效益2",
    "foreground2",
    "icon经济效益",
    "竞争优势",
    "foreground",
    "擅长技术栈",
    "title4",
    "frame8",
    "文字4",
    "文字5",
    "文字6",
    "文字7",
    "文字8",
    "footer"
  ],
  content: [
    "content",
    "navbar",
    "logo",
    "寒芒Logo",
    "logo2",
    "logoText",
    "button",
    "公司描述",
    "文字",
    "image9",
    "tag",
    "image",
    "业务领域",
    "image24",
    "frame28",
    "title",
    "frame29",
    "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案",
    "擅长",
    "切换",
    "切换2",
    "text2",
    "切换3",
    "text3",
    "section",
    "foreground3",
    "frame35",
    "title5",
    "成果展示",
    "成果1",
    "image20",
    "文字3",
    "成果",
    "title3",
    "image8",
    "经济效益",
    "left",
    "text4",
    "data",
    "节省烤烟分拣员人力",
    "data2",
    "节省烤烟分拣员人力2",
    "_80",
    "data3",
    "节省烤烟分拣员人力3",
    "data4",
    "节省烤烟分拣员人力4",
    "_802",
    "data5",
    "节省烤烟分拣员人力5",
    "_803",
    "经济效益2",
    "foreground2",
    "icon经济效益",
    "竞争优势",
    "foreground",
    "擅长技术栈",
    "title4",
    "frame8",
    "文字4",
    "文字5",
    "文字6",
    "文字7",
    "文字8",
    "footer"
  ],
  navbar: ["navbar", "logo", "寒芒Logo", "logo2", "logoText", "button"],
  logo: ["logo", "寒芒Logo", "logo2", "logoText"],
  寒芒Logo: ["寒芒Logo", "logo2"],
  logo2: ["logo2"],
  logoText: ["logoText"],
  button: ["button"],
  公司描述: ["公司描述", "文字", "image9", "tag", "image"],
  文字: ["文字", "image9", "tag"],
  image9: ["image9"],
  tag: ["tag"],
  image: ["image"],
  业务领域: [
    "业务领域",
    "image24",
    "frame28",
    "title",
    "frame29",
    "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案",
    "擅长",
    "切换",
    "切换2",
    "text2",
    "切换3",
    "text3"
  ],
  image24: ["image24"],
  frame28: [
    "frame28",
    "title",
    "frame29",
    "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案",
    "擅长",
    "切换",
    "切换2",
    "text2",
    "切换3",
    "text3"
  ],
  title: ["title"],
  frame29: [
    "frame29",
    "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案",
    "擅长",
    "切换",
    "切换2",
    "text2",
    "切换3",
    "text3"
  ],
  无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案:
    [
      "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案"
    ],
  擅长: ["擅长", "切换", "切换2", "text2", "切换3", "text3"],
  切换: ["切换"],
  切换2: ["切换2", "text2"],
  text2: ["text2"],
  切换3: ["切换3", "text3"],
  text3: ["text3"],
  section: ["section", "foreground3", "frame35", "title5"],
  foreground3: ["foreground3", "frame35", "title5"],
  frame35: ["frame35", "title5"],
  title5: ["title5"],
  成果展示: [
    "成果展示",
    "成果1",
    "image20",
    "文字3",
    "成果",
    "title3",
    "image8"
  ],
  成果1: ["成果1", "image20", "文字3", "成果", "title3", "image8"],
  image20: ["image20"],
  文字3: ["文字3", "成果", "title3", "image8"],
  成果: ["成果", "title3", "image8"],
  title3: ["title3"],
  image8: ["image8"],
  经济效益: [
    "经济效益",
    "left",
    "text4",
    "data",
    "节省烤烟分拣员人力",
    "data2",
    "节省烤烟分拣员人力2",
    "_80",
    "data3",
    "节省烤烟分拣员人力3",
    "data4",
    "节省烤烟分拣员人力4",
    "_802",
    "data5",
    "节省烤烟分拣员人力5",
    "_803"
  ],
  left: [
    "left",
    "text4",
    "data",
    "节省烤烟分拣员人力",
    "data2",
    "节省烤烟分拣员人力2",
    "_80",
    "data3",
    "节省烤烟分拣员人力3",
    "data4",
    "节省烤烟分拣员人力4",
    "_802",
    "data5",
    "节省烤烟分拣员人力5",
    "_803"
  ],
  text4: [
    "text4",
    "data",
    "节省烤烟分拣员人力",
    "data2",
    "节省烤烟分拣员人力2",
    "_80",
    "data3",
    "节省烤烟分拣员人力3",
    "data4",
    "节省烤烟分拣员人力4",
    "_802",
    "data5",
    "节省烤烟分拣员人力5",
    "_803"
  ],
  data: ["data", "节省烤烟分拣员人力"],
  节省烤烟分拣员人力: ["节省烤烟分拣员人力"],
  data2: ["data2", "节省烤烟分拣员人力2", "_80"],
  节省烤烟分拣员人力2: ["节省烤烟分拣员人力2"],
  _80: ["_80"],
  data3: ["data3", "节省烤烟分拣员人力3"],
  节省烤烟分拣员人力3: ["节省烤烟分拣员人力3"],
  data4: ["data4", "节省烤烟分拣员人力4", "_802"],
  节省烤烟分拣员人力4: ["节省烤烟分拣员人力4"],
  _802: ["_802"],
  data5: ["data5", "节省烤烟分拣员人力5", "_803"],
  节省烤烟分拣员人力5: ["节省烤烟分拣员人力5"],
  _803: ["_803"],
  经济效益2: ["经济效益2", "foreground2", "icon经济效益"],
  foreground2: ["foreground2", "icon经济效益"],
  icon经济效益: ["icon经济效益"],
  竞争优势: ["竞争优势", "foreground"],
  foreground: ["foreground"],
  擅长技术栈: [
    "擅长技术栈",
    "title4",
    "frame8",
    "文字4",
    "文字5",
    "文字6",
    "文字7",
    "文字8"
  ],
  title4: ["title4"],
  frame8: ["frame8", "文字4", "文字5", "文字6", "文字7", "文字8"],
  文字4: ["文字4"],
  文字5: ["文字5"],
  文字6: ["文字6"],
  文字7: ["文字7"],
  文字8: ["文字8"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  content: "div";
  navbar: "div";
  logo: "div";
  寒芒Logo: "div";
  logo2: "div";
  logoText: "div";
  button: typeof Button;
  公司描述: "div";
  文字: "div";
  image9: "div";
  tag: "div";
  image: "div";
  业务领域: "div";
  image24: "div";
  frame28: "div";
  title: "div";
  frame29: "div";
  无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案: "div";
  擅长: "div";
  切换: "div";
  切换2: "div";
  text2: "div";
  切换3: "div";
  text3: "div";
  section: "section";
  foreground3: "div";
  frame35: "div";
  title5: "div";
  成果展示: "div";
  成果1: "div";
  image20: "div";
  文字3: "div";
  成果: "div";
  title3: "div";
  image8: "div";
  经济效益: "div";
  left: "div";
  text4: "div";
  data: "div";
  节省烤烟分拣员人力: "div";
  data2: "div";
  节省烤烟分拣员人力2: "div";
  _80: "div";
  data3: "div";
  节省烤烟分拣员人力3: "div";
  data4: "div";
  节省烤烟分拣员人力4: "div";
  _802: "div";
  data5: "div";
  节省烤烟分拣员人力5: "div";
  _803: "div";
  经济效益2: "section";
  foreground2: "div";
  icon经济效益: typeof p.PlasmicImg;
  竞争优势: "section";
  foreground: "div";
  擅长技术栈: "div";
  title4: "div";
  frame8: "div";
  文字4: "div";
  文字5: "div";
  文字6: "div";
  文字7: "div";
  文字8: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic创维分析__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic创维分析__VariantsArgs;
    args?: Plasmic创维分析__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic创维分析__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmic创维分析__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic创维分析__ArgProps,
          internalVariantPropNames: Plasmic创维分析__VariantProps
        }),
      [props, nodeName]
    );

    return Plasmic创维分析__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic创维分析";
  } else {
    func.displayName = `Plasmic创维分析.${nodeName}`;
  }
  return func;
}

export const Plasmic创维分析 = Object.assign(
  // Top-level Plasmic创维分析 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    content: makeNodeComponent("content"),
    navbar: makeNodeComponent("navbar"),
    logo: makeNodeComponent("logo"),
    寒芒Logo: makeNodeComponent("寒芒Logo"),
    logo2: makeNodeComponent("logo2"),
    logoText: makeNodeComponent("logoText"),
    button: makeNodeComponent("button"),
    公司描述: makeNodeComponent("公司描述"),
    文字: makeNodeComponent("文字"),
    image9: makeNodeComponent("image9"),
    tag: makeNodeComponent("tag"),
    image: makeNodeComponent("image"),
    业务领域: makeNodeComponent("业务领域"),
    image24: makeNodeComponent("image24"),
    frame28: makeNodeComponent("frame28"),
    title: makeNodeComponent("title"),
    frame29: makeNodeComponent("frame29"),
    无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案:
      makeNodeComponent(
        "无法自动化生成贴合企业实际情况合适的经营目标无法自动化生成经营分析报告进行自动化的归因分析无法自动化异常数据监控和数据分析并提供系统建议的解决方案"
      ),
    擅长: makeNodeComponent("擅长"),
    切换: makeNodeComponent("切换"),
    切换2: makeNodeComponent("切换2"),
    text2: makeNodeComponent("text2"),
    切换3: makeNodeComponent("切换3"),
    text3: makeNodeComponent("text3"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    frame35: makeNodeComponent("frame35"),
    title5: makeNodeComponent("title5"),
    成果展示: makeNodeComponent("成果展示"),
    成果1: makeNodeComponent("成果1"),
    image20: makeNodeComponent("image20"),
    文字3: makeNodeComponent("文字3"),
    成果: makeNodeComponent("成果"),
    title3: makeNodeComponent("title3"),
    image8: makeNodeComponent("image8"),
    经济效益: makeNodeComponent("经济效益"),
    left: makeNodeComponent("left"),
    text4: makeNodeComponent("text4"),
    data: makeNodeComponent("data"),
    节省烤烟分拣员人力: makeNodeComponent("节省烤烟分拣员人力"),
    data2: makeNodeComponent("data2"),
    节省烤烟分拣员人力2: makeNodeComponent("节省烤烟分拣员人力2"),
    _80: makeNodeComponent("_80"),
    data3: makeNodeComponent("data3"),
    节省烤烟分拣员人力3: makeNodeComponent("节省烤烟分拣员人力3"),
    data4: makeNodeComponent("data4"),
    节省烤烟分拣员人力4: makeNodeComponent("节省烤烟分拣员人力4"),
    _802: makeNodeComponent("_802"),
    data5: makeNodeComponent("data5"),
    节省烤烟分拣员人力5: makeNodeComponent("节省烤烟分拣员人力5"),
    _803: makeNodeComponent("_803"),
    经济效益2: makeNodeComponent("经济效益2"),
    foreground2: makeNodeComponent("foreground2"),
    icon经济效益: makeNodeComponent("icon经济效益"),
    竞争优势: makeNodeComponent("竞争优势"),
    foreground: makeNodeComponent("foreground"),
    擅长技术栈: makeNodeComponent("擅长技术栈"),
    title4: makeNodeComponent("title4"),
    frame8: makeNodeComponent("frame8"),
    文字4: makeNodeComponent("文字4"),
    文字5: makeNodeComponent("文字5"),
    文字6: makeNodeComponent("文字6"),
    文字7: makeNodeComponent("文字7"),
    文字8: makeNodeComponent("文字8"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for Plasmic创维分析
    internalVariantProps: Plasmic创维分析__VariantProps,
    internalArgProps: Plasmic创维分析__ArgProps
  }
);

export default Plasmic创维分析;
/* prettier-ignore-end */
