// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7jQgmBmKYyCbHXSekk2FRy
// Component: 1stVQhR2tB
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: w7EiyFeNrat/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import Footer from "../../Footer"; // plasmic-import: ZF4Tnw-zFby/component

import { useScreenVariants as useScreenVariantskJp4EfKscK4Tw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kJp4efKscK4Tw/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_寒芒.module.css"; // plasmic-import: 7jQgmBmKYyCbHXSekk2FRy/projectcss
import sty from "./Plasmic餐饮.module.css"; // plasmic-import: 1stVQhR2tB/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: jxcxtzGjitd/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 61HpChsnqny/icon
import Icon36Icon from "./icons/PlasmicIcon__Icon36"; // plasmic-import: nYFEnLDxjr/icon
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: qO_UVpfk2WP/icon
import Icon37Icon from "./icons/PlasmicIcon__Icon37"; // plasmic-import: 6FtF8soVSE/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: BOi5e44CqZ/icon
import Icon40Icon from "./icons/PlasmicIcon__Icon40"; // plasmic-import: WYdDZfFjyc/icon
import Icon39Icon from "./icons/PlasmicIcon__Icon39"; // plasmic-import: -_L1H0dI5J/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: zVLtnvVHUj/icon
import Icon41Icon from "./icons/PlasmicIcon__Icon41"; // plasmic-import: EPpBmOTN9X/icon
import Icon42Icon from "./icons/PlasmicIcon__Icon42"; // plasmic-import: D6bbryU_Sd/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: CPrZBowKmb/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: MnPSDNx1dHt/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: AVvOQiMFXTC/icon
import Icon25Icon from "./icons/PlasmicIcon__Icon25"; // plasmic-import: _twUQQ4k6I/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: xPXMlJZnbQ/icon

export type Plasmic餐饮__VariantMembers = {};

export type Plasmic餐饮__VariantsArgs = {};
type VariantPropType = keyof Plasmic餐饮__VariantsArgs;
export const Plasmic餐饮__VariantProps = new Array<VariantPropType>();

export type Plasmic餐饮__ArgsType = {};
type ArgPropType = keyof Plasmic餐饮__ArgsType;
export const Plasmic餐饮__ArgProps = new Array<ArgPropType>();

export type Plasmic餐饮__OverridesType = {
  root?: p.Flex<"div">;
  餐饮?: p.Flex<"div">;
  navbar?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  寒芒Logo?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  logoText?: p.Flex<"div">;
  button?: p.Flex<typeof Button>;
  公司描述?: p.Flex<"div">;
  文字?: p.Flex<"div">;
  image9?: p.Flex<"div">;
  餐饮端微信小程序SaaS服务云平台?: p.Flex<"div">;
  tag?: p.Flex<"div">;
  image?: p.Flex<"div">;
  业务领域?: p.Flex<"div">;
  配图?: p.Flex<"div">;
  right?: p.Flex<"div">;
  title?: p.Flex<"div">;
  text6?: p.Flex<"div">;
  擅长?: p.Flex<"div">;
  切换?: p.Flex<"div">;
  text2?: p.Flex<"div">;
  切换2?: p.Flex<"div">;
  text3?: p.Flex<"div">;
  切换3?: p.Flex<"div">;
  text4?: p.Flex<"div">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  frame35?: p.Flex<"div">;
  title7?: p.Flex<"div">;
  title6?: p.Flex<"div">;
  技术实现?: p.Flex<"div">;
  title8?: p.Flex<"div">;
  文字6?: p.Flex<"div">;
  image49?: p.Flex<"div">;
  image50?: p.Flex<"div">;
  image51?: p.Flex<"div">;
  image52?: p.Flex<"div">;
  image53?: p.Flex<"div">;
  image54?: p.Flex<"div">;
  image55?: p.Flex<"div">;
  image56?: p.Flex<"div">;
  客户案例2?: p.Flex<"div">;
  title5?: p.Flex<"div">;
  经济效益2?: p.Flex<"section">;
  foreground2?: p.Flex<"div">;
  icon经济效益?: p.Flex<typeof p.PlasmicImg>;
  space?: p.Flex<"div">;
  竞争优势?: p.Flex<"section">;
  foreground?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface Default餐饮Props {}

function Plasmic餐饮__RenderFunc(props: {
  variants: Plasmic餐饮__VariantsArgs;
  args: Plasmic餐饮__ArgsType;
  overrides: Plasmic餐饮__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskJp4EfKscK4Tw()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />

        <title key="title">{"餐饮端微信小程序SaaS服务云平台"}</title>

        <meta
          key="og:title"
          property="og:title"
          content={"餐饮端微信小程序SaaS服务云平台"}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"餐饮端微信小程序SaaS服务云平台"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"餐饮"}
            data-plasmic-override={overrides.餐饮}
            className={classNames(projectcss.all, sty.餐饮)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              hasGap={true}
              className={classNames(projectcss.all, sty.navbar)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"logo"}
                data-plasmic-override={overrides.logo}
                hasGap={true}
                className={classNames(projectcss.all, sty.logo)}
              >
                <div
                  data-plasmic-name={"寒芒Logo"}
                  data-plasmic-override={overrides.寒芒Logo}
                  className={classNames(projectcss.all, sty.寒芒Logo)}
                >
                  <div
                    data-plasmic-name={"logo2"}
                    data-plasmic-override={overrides.logo2}
                    className={classNames(projectcss.all, sty.logo2)}
                  />
                </div>

                {true ? (
                  <div
                    data-plasmic-name={"logoText"}
                    data-plasmic-override={overrides.logoText}
                    className={classNames(projectcss.all, sty.logoText)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h2Xzc
                      )}
                    >
                      {"寒芒科技"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hh4Eu
                      )}
                    >
                      {"HanMang Technology"}
                    </div>
                  </div>
                ) : null}
              </p.Stack>

              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
                link={"/" as const}
              >
                {"返回首页"}
              </Button>
            </p.Stack>

            <Reveal
              className={classNames("__wab_instance", sty.reveal___5Ljyj)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"公司描述"}
                data-plasmic-override={overrides.公司描述}
                hasGap={true}
                className={classNames(projectcss.all, sty.公司描述)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"文字"}
                  data-plasmic-override={overrides.文字}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.文字)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      data-plasmic-name={"image9"}
                      data-plasmic-override={overrides.image9}
                      className={classNames(projectcss.all, sty.image9)}
                    />
                  ) : null}

                  <div
                    data-plasmic-name={"餐饮端微信小程序SaaS服务云平台"}
                    data-plasmic-override={
                      overrides.餐饮端微信小程序SaaS服务云平台
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.餐饮端微信小程序SaaS服务云平台
                    )}
                  >
                    {"餐饮端微信小程序SaaS服务云平台 "}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"tag"}
                    data-plasmic-override={overrides.tag}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.tag)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vq6Cg
                      )}
                    >
                      {"#商业化解决方案领域"}
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wYq6P
                    )}
                  >
                    {
                      "移动互联网时代，微信小程序基于微信平台庞大的用户基数、凭借其轻量、便捷的优势特点，迅速成为普通商家拓展线上渠道的首选入口。"
                    }
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"image"}
                  data-plasmic-override={overrides.image}
                  className={classNames(projectcss.all, sty.image)}
                />
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal___5Vgt)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"业务领域"}
                data-plasmic-override={overrides.业务领域}
                hasGap={true}
                className={classNames(projectcss.all, sty.业务领域)}
              >
                <div
                  data-plasmic-name={"配图"}
                  data-plasmic-override={overrides.配图}
                  className={classNames(projectcss.all, sty.配图)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"right"}
                  data-plasmic-override={overrides.right}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.right)}
                >
                  <div
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title
                    )}
                  >
                    {"行业痛点"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"text6"}
                    data-plasmic-override={overrides.text6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.text6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h6IbT
                      )}
                    >
                      {
                        "微信小程序的前后端开发部署和服务器的维护对于大多数普通商户而言技术门槛高，独立开发成本高，不利于线上商业化的快速铺开和产品迭代。"
                      }
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"擅长"}
                      data-plasmic-override={overrides.擅长}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.擅长)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"切换"}
                        data-plasmic-override={overrides.切换}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.切换)}
                      >
                        <div
                          data-plasmic-name={"text2"}
                          data-plasmic-override={overrides.text2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text2
                          )}
                        >
                          {"技术门槛高"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"切换2"}
                        data-plasmic-override={overrides.切换2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.切换2)}
                      >
                        <div
                          data-plasmic-name={"text3"}
                          data-plasmic-override={overrides.text3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text3
                          )}
                        >
                          {"独立开发成本高"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"切换3"}
                        data-plasmic-override={overrides.切换3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.切换3)}
                      >
                        <div
                          data-plasmic-name={"text4"}
                          data-plasmic-override={overrides.text4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text4
                          )}
                        >
                          {"不利于快速商业化"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__i0Kwd)}
              triggerOnce={true}
            >
              <section
                data-plasmic-name={"section"}
                data-plasmic-override={overrides.section}
                className={classNames(projectcss.all, sty.section)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground3"}
                  data-plasmic-override={overrides.foreground3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___61HK7)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qODoq)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame35"}
                        data-plasmic-override={overrides.frame35}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame35)}
                      >
                        <div
                          data-plasmic-name={"title7"}
                          data-plasmic-override={overrides.title7}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.title7
                          )}
                        >
                          {"解决方案"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pY5Co)}
                    >
                      <div
                        data-plasmic-name={"title6"}
                        data-plasmic-override={overrides.title6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.title6
                        )}
                      >
                        {"整体产品思路"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mYDmY
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eEnZz
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__k9At8
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ftp1U
                              )}
                            >
                              <Icon36Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jzFd3
                                )}
                                role={"img"}
                              />
                            </div>

                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___1LGsz
                                )}
                              >
                                <Icon9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__zoaCv
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__m1Llq
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__r0V9X
                                )}
                              >
                                {"快速落地"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__s7Oz5
                                )}
                              >
                                {
                                  "小程序SaaS服务云平台是将软件看作是一种服务。用户无需自己独立开发、运维。使用本平台即可快速构建自己微信小程序平台，共享服务器，共享后期运维，实现商业模式快速落地。"
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bjhDw
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__hMfyI
                              )}
                            >
                              <Icon37Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nqFlq
                                )}
                                role={"img"}
                              />
                            </div>

                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__gIafD
                                )}
                              >
                                <Icon9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__pVlau
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bm5S9
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xcjNw
                                )}
                              >
                                {"数据隔离"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jtAsy
                                )}
                              >
                                {
                                  "不同租户之间采用Schema进行数据隔离，保障数据安全。"
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qTg3H
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jbQDr
                              )}
                            >
                              <Icon38Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__bCdQ
                                )}
                                role={"img"}
                              />
                            </div>

                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__oSg2L
                                )}
                              >
                                <Icon9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__csC9V
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1ARsJ
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gG6W2
                                )}
                              >
                                {"域名自动分配"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ko6Wa
                                )}
                              >
                                {
                                  "不同企业不同域名自动分配，让企业小程序、公众号前端隔离，避免因为公众号或者小程序推广时导致域名被检测导致的封号问题出现，即不同企业不同域，意在防止saas平台中的企业受到其他企业的影响。"
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__akfEg
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yzOyu
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__w2A4
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pNn5D
                              )}
                            >
                              <Icon40Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__e5Oxx
                                )}
                                role={"img"}
                              />
                            </div>

                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__frxT8
                                )}
                              >
                                <Icon9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___1U4Qj
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___86PYl
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uq807
                                )}
                              >
                                {"代码自动Push与升级"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__purMe
                                )}
                              >
                                {
                                  "小程序代码自动push与升级，公众号基本常规功能（自定义菜单、图文、素材，群发）全部接管，让企业无需登录微信官方入口，统一化管理企业信息与数据。"
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fo75M
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jTtye
                              )}
                            >
                              <Icon39Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uBEeu
                                )}
                                role={"img"}
                              />
                            </div>

                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__nTpXh
                                )}
                              >
                                <Icon9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__h3FJj
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__o0ZsS
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ifFgq
                                )}
                              >
                                {"平台提供"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__zp7Mj
                                )}
                              >
                                {
                                  "餐饮小程序模板，可实现堂食点餐，外卖点餐与配送等功能。适合餐饮行业，水果生鲜门店，超市等。支持多用户，多应用多门店。"
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uyCcX
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__f8Xor
                              )}
                            >
                              <Icon20Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vnQ54
                                )}
                                role={"img"}
                              />
                            </div>

                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__ntgKs
                                )}
                              >
                                <Icon9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__jLzpq
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__kliFa
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wh94B
                                )}
                              >
                                {"丰富的营销工具"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__v9Pm7
                                )}
                              >
                                {
                                  "解决企业微营销需求，并集中化管理。拼团活动、积分活动、砍价，优惠券，卡券，礼品卡，邀请有礼等营销活动，方便二次开发。"
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"技术实现"}
                    data-plasmic-override={overrides.技术实现}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.技术实现)}
                  >
                    <div
                      data-plasmic-name={"title8"}
                      data-plasmic-override={overrides.title8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.title8
                      )}
                    >
                      {"技术实现"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"文字6"}
                      data-plasmic-override={overrides.文字6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.文字6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__elaeg
                        )}
                      >
                        {
                          "项目采用SpringCloud + Oauth2.0 +ShiroRedis + JWT + Gateway + Nacos + Nginx + ant-design-vue。"
                        }
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ofkD4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bjVdA
                          )}
                        >
                          <div
                            data-plasmic-name={"image49"}
                            data-plasmic-override={overrides.image49}
                            className={classNames(projectcss.all, sty.image49)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pmRDl
                          )}
                        >
                          <div
                            data-plasmic-name={"image50"}
                            data-plasmic-override={overrides.image50}
                            className={classNames(projectcss.all, sty.image50)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1JOnF
                          )}
                        >
                          <div
                            data-plasmic-name={"image51"}
                            data-plasmic-override={overrides.image51}
                            className={classNames(projectcss.all, sty.image51)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fx9Vo
                          )}
                        >
                          <div
                            data-plasmic-name={"image52"}
                            data-plasmic-override={overrides.image52}
                            className={classNames(projectcss.all, sty.image52)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cZAi
                          )}
                        >
                          <div
                            data-plasmic-name={"image53"}
                            data-plasmic-override={overrides.image53}
                            className={classNames(projectcss.all, sty.image53)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___88WHw
                          )}
                        >
                          <div
                            data-plasmic-name={"image54"}
                            data-plasmic-override={overrides.image54}
                            className={classNames(projectcss.all, sty.image54)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9S9Fn
                          )}
                        >
                          <div
                            data-plasmic-name={"image55"}
                            data-plasmic-override={overrides.image55}
                            className={classNames(projectcss.all, sty.image55)}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gJxZ
                          )}
                        >
                          <div
                            data-plasmic-name={"image56"}
                            data-plasmic-override={overrides.image56}
                            className={classNames(projectcss.all, sty.image56)}
                          />
                        </div>
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </section>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__wL9Na)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"客户案例2"}
                data-plasmic-override={overrides.客户案例2}
                hasGap={true}
                className={classNames(projectcss.all, sty.客户案例2)}
              >
                <div
                  data-plasmic-name={"title5"}
                  data-plasmic-override={overrides.title5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title5
                  )}
                >
                  {"成果展示"}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__f2MGj)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__opoQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vvNv)}
                    >
                      <Icon41Icon
                        className={classNames(projectcss.all, sty.svg__leP)}
                        role={"img"}
                      />
                    </div>

                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fFh4U
                        )}
                      >
                        <Icon9Icon
                          className={classNames(projectcss.all, sty.svg__sIth8)}
                          role={"img"}
                        />
                      </div>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wwpwh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wJWuy
                        )}
                      >
                        {"前端自主配置页面"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j8Qng
                        )}
                      >
                        {
                          "实现网页自定义前端配置组件、样式、模板，轻松构建商户前端展示页面，并且可根据运营主题快速更换。"
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xUyIx)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__c39Jd)}
                    >
                      <Icon42Icon
                        className={classNames(projectcss.all, sty.svg__ueBQe)}
                        role={"img"}
                      />
                    </div>

                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5Dt7K
                        )}
                      >
                        <Icon9Icon
                          className={classNames(projectcss.all, sty.svg__hezKz)}
                          role={"img"}
                        />
                      </div>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lxa59)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iaog
                        )}
                      >
                        {"后端运营平台监控"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__modM
                        )}
                      >
                        {
                          "实现营收监控、行为分析、流量平台，轻松一站式精细运营，让活动精准投放，让问题早日暴露，让商家收益日益增长"
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yU9Qu)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__aJhW6)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("100%" as const)
                        : ("616px" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/寒芒/images/餐饮成果.webp",
                      fullWidth: 1920,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___02VSx)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("100%" as const)
                        : ("616px" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/寒芒/images/餐饮结果2.webp",
                      fullWidth: 1920,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__vfg1G)}
              triggerOnce={true}
            >
              <p.Stack
                as={"section"}
                data-plasmic-name={"经济效益2"}
                data-plasmic-override={overrides.经济效益2}
                hasGap={true}
                className={classNames(projectcss.all, sty.经济效益2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <div className={classNames(projectcss.all, sty.column__o4Hk)}>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6TA6L
                      )}
                    >
                      <p.PlasmicImg
                        data-plasmic-name={"icon经济效益"}
                        data-plasmic-override={overrides.icon经济效益}
                        alt={""}
                        className={classNames(sty.icon经济效益)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/寒芒/images/icon经济效益.svg",
                          fullWidth: 133,
                          fullHeight: 150,
                          aspectRatio: 0.883495
                        }}
                      />

                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__ncPwi
                        )}
                      >
                        {"经济效益"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fqZu8
                        )}
                      >
                        {"economic efficiency"}
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__zhwWg)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aMm3K)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dhN3V
                        )}
                      >
                        <Icon11Icon
                          className={classNames(projectcss.all, sty.svg__lE45Q)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6Ldn0
                          )}
                        >
                          {"累计服务商户"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__k3H9O
                          )}
                        >
                          {"1000+"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__q5Tv0
                        )}
                      >
                        <Icon11Icon
                          className={classNames(projectcss.all, sty.svg__rup3D)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w7YTc
                          )}
                        >
                          {"DAU可达"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mHKrF
                          )}
                        >
                          {"10W+"}
                        </div>
                      </p.Stack>
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__ur4Wd)}
              triggerOnce={true}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"space"}
                data-plasmic-override={overrides.space}
                hasGap={true}
                className={classNames(projectcss.all, sty.space)}
              />
            </Reveal>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__qqoGp)}
              triggerOnce={true}
            >
              <section
                data-plasmic-name={"竞争优势"}
                data-plasmic-override={overrides.竞争优势}
                className={classNames(projectcss.all, sty.竞争优势)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground"}
                  data-plasmic-override={overrides.foreground}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rzC1)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__u3ErH)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__eawsf
                        )}
                      >
                        {"竞争优势"}
                      </h2>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__edxsl
                      )}
                    >
                      {"competitive advantage"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__s6PYa)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dEiSk)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cMpf2
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pSMhe
                          )}
                        >
                          <Icon21Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pZqhD
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fcocY
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___1K0ER
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vpjpy
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sk53T
                            )}
                          >
                            {"响应快"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__y4XFg
                            )}
                          >
                            {"平台响应速度快，资源调度处理能力强"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bbNxL
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sVz78
                          )}
                        >
                          <Icon18Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ihEeI
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__hXaK1
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rgPsK
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k758B
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zaqJc
                            )}
                          >
                            {"稳定性强"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___33RGn
                            )}
                          >
                            {"平台整体稳定性强，支持海量的数据请求"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jKoS
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___14KZx
                          )}
                        >
                          <Icon25Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__irNzp
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__s30Nb
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yYiJu
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mpLir
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x6OB
                            )}
                          >
                            {"易于品牌宣发"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9Oyj7
                            )}
                          >
                            {"注重商业效率，设计美观，且商品宣传分发效率高"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lZkMs
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__upnlp
                          )}
                        >
                          <Icon12Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__eczfa
                            )}
                            role={"img"}
                          />
                        </div>

                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___3C38K
                            )}
                          >
                            <Icon9Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__okzbe
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0Yz4G
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mxhE
                            )}
                          >
                            {"体验好"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__l3Kh3
                            )}
                          >
                            {"注重交互合理性，功能齐全，操作简单，用户体检佳"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </section>
            </Reveal>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "餐饮",
    "navbar",
    "logo",
    "寒芒Logo",
    "logo2",
    "logoText",
    "button",
    "公司描述",
    "文字",
    "image9",
    "餐饮端微信小程序SaaS服务云平台",
    "tag",
    "image",
    "业务领域",
    "配图",
    "right",
    "title",
    "text6",
    "擅长",
    "切换",
    "text2",
    "切换2",
    "text3",
    "切换3",
    "text4",
    "section",
    "foreground3",
    "frame35",
    "title7",
    "title6",
    "技术实现",
    "title8",
    "文字6",
    "image49",
    "image50",
    "image51",
    "image52",
    "image53",
    "image54",
    "image55",
    "image56",
    "客户案例2",
    "title5",
    "经济效益2",
    "foreground2",
    "icon经济效益",
    "space",
    "竞争优势",
    "foreground",
    "footer"
  ],
  餐饮: [
    "餐饮",
    "navbar",
    "logo",
    "寒芒Logo",
    "logo2",
    "logoText",
    "button",
    "公司描述",
    "文字",
    "image9",
    "餐饮端微信小程序SaaS服务云平台",
    "tag",
    "image",
    "业务领域",
    "配图",
    "right",
    "title",
    "text6",
    "擅长",
    "切换",
    "text2",
    "切换2",
    "text3",
    "切换3",
    "text4",
    "section",
    "foreground3",
    "frame35",
    "title7",
    "title6",
    "技术实现",
    "title8",
    "文字6",
    "image49",
    "image50",
    "image51",
    "image52",
    "image53",
    "image54",
    "image55",
    "image56",
    "客户案例2",
    "title5",
    "经济效益2",
    "foreground2",
    "icon经济效益",
    "space",
    "竞争优势",
    "foreground",
    "footer"
  ],
  navbar: ["navbar", "logo", "寒芒Logo", "logo2", "logoText", "button"],
  logo: ["logo", "寒芒Logo", "logo2", "logoText"],
  寒芒Logo: ["寒芒Logo", "logo2"],
  logo2: ["logo2"],
  logoText: ["logoText"],
  button: ["button"],
  公司描述: [
    "公司描述",
    "文字",
    "image9",
    "餐饮端微信小程序SaaS服务云平台",
    "tag",
    "image"
  ],
  文字: ["文字", "image9", "餐饮端微信小程序SaaS服务云平台", "tag"],
  image9: ["image9"],
  餐饮端微信小程序SaaS服务云平台: ["餐饮端微信小程序SaaS服务云平台"],
  tag: ["tag"],
  image: ["image"],
  业务领域: [
    "业务领域",
    "配图",
    "right",
    "title",
    "text6",
    "擅长",
    "切换",
    "text2",
    "切换2",
    "text3",
    "切换3",
    "text4"
  ],
  配图: ["配图"],
  right: [
    "right",
    "title",
    "text6",
    "擅长",
    "切换",
    "text2",
    "切换2",
    "text3",
    "切换3",
    "text4"
  ],
  title: ["title"],
  text6: ["text6", "擅长", "切换", "text2", "切换2", "text3", "切换3", "text4"],
  擅长: ["擅长", "切换", "text2", "切换2", "text3", "切换3", "text4"],
  切换: ["切换", "text2"],
  text2: ["text2"],
  切换2: ["切换2", "text3"],
  text3: ["text3"],
  切换3: ["切换3", "text4"],
  text4: ["text4"],
  section: [
    "section",
    "foreground3",
    "frame35",
    "title7",
    "title6",
    "技术实现",
    "title8",
    "文字6",
    "image49",
    "image50",
    "image51",
    "image52",
    "image53",
    "image54",
    "image55",
    "image56"
  ],
  foreground3: [
    "foreground3",
    "frame35",
    "title7",
    "title6",
    "技术实现",
    "title8",
    "文字6",
    "image49",
    "image50",
    "image51",
    "image52",
    "image53",
    "image54",
    "image55",
    "image56"
  ],
  frame35: ["frame35", "title7"],
  title7: ["title7"],
  title6: ["title6"],
  技术实现: [
    "技术实现",
    "title8",
    "文字6",
    "image49",
    "image50",
    "image51",
    "image52",
    "image53",
    "image54",
    "image55",
    "image56"
  ],
  title8: ["title8"],
  文字6: [
    "文字6",
    "image49",
    "image50",
    "image51",
    "image52",
    "image53",
    "image54",
    "image55",
    "image56"
  ],
  image49: ["image49"],
  image50: ["image50"],
  image51: ["image51"],
  image52: ["image52"],
  image53: ["image53"],
  image54: ["image54"],
  image55: ["image55"],
  image56: ["image56"],
  客户案例2: ["客户案例2", "title5"],
  title5: ["title5"],
  经济效益2: ["经济效益2", "foreground2", "icon经济效益"],
  foreground2: ["foreground2", "icon经济效益"],
  icon经济效益: ["icon经济效益"],
  space: ["space"],
  竞争优势: ["竞争优势", "foreground"],
  foreground: ["foreground"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  餐饮: "div";
  navbar: "div";
  logo: "div";
  寒芒Logo: "div";
  logo2: "div";
  logoText: "div";
  button: typeof Button;
  公司描述: "div";
  文字: "div";
  image9: "div";
  餐饮端微信小程序SaaS服务云平台: "div";
  tag: "div";
  image: "div";
  业务领域: "div";
  配图: "div";
  right: "div";
  title: "div";
  text6: "div";
  擅长: "div";
  切换: "div";
  text2: "div";
  切换2: "div";
  text3: "div";
  切换3: "div";
  text4: "div";
  section: "section";
  foreground3: "div";
  frame35: "div";
  title7: "div";
  title6: "div";
  技术实现: "div";
  title8: "div";
  文字6: "div";
  image49: "div";
  image50: "div";
  image51: "div";
  image52: "div";
  image53: "div";
  image54: "div";
  image55: "div";
  image56: "div";
  客户案例2: "div";
  title5: "div";
  经济效益2: "section";
  foreground2: "div";
  icon经济效益: typeof p.PlasmicImg;
  space: "div";
  竞争优势: "section";
  foreground: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic餐饮__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic餐饮__VariantsArgs;
    args?: Plasmic餐饮__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic餐饮__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmic餐饮__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic餐饮__ArgProps,
          internalVariantPropNames: Plasmic餐饮__VariantProps
        }),
      [props, nodeName]
    );

    return Plasmic餐饮__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic餐饮";
  } else {
    func.displayName = `Plasmic餐饮.${nodeName}`;
  }
  return func;
}

export const Plasmic餐饮 = Object.assign(
  // Top-level Plasmic餐饮 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    餐饮: makeNodeComponent("餐饮"),
    navbar: makeNodeComponent("navbar"),
    logo: makeNodeComponent("logo"),
    寒芒Logo: makeNodeComponent("寒芒Logo"),
    logo2: makeNodeComponent("logo2"),
    logoText: makeNodeComponent("logoText"),
    button: makeNodeComponent("button"),
    公司描述: makeNodeComponent("公司描述"),
    文字: makeNodeComponent("文字"),
    image9: makeNodeComponent("image9"),
    餐饮端微信小程序SaaS服务云平台:
      makeNodeComponent("餐饮端微信小程序SaaS服务云平台"),
    tag: makeNodeComponent("tag"),
    image: makeNodeComponent("image"),
    业务领域: makeNodeComponent("业务领域"),
    配图: makeNodeComponent("配图"),
    right: makeNodeComponent("right"),
    title: makeNodeComponent("title"),
    text6: makeNodeComponent("text6"),
    擅长: makeNodeComponent("擅长"),
    切换: makeNodeComponent("切换"),
    text2: makeNodeComponent("text2"),
    切换2: makeNodeComponent("切换2"),
    text3: makeNodeComponent("text3"),
    切换3: makeNodeComponent("切换3"),
    text4: makeNodeComponent("text4"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    frame35: makeNodeComponent("frame35"),
    title7: makeNodeComponent("title7"),
    title6: makeNodeComponent("title6"),
    技术实现: makeNodeComponent("技术实现"),
    title8: makeNodeComponent("title8"),
    文字6: makeNodeComponent("文字6"),
    image49: makeNodeComponent("image49"),
    image50: makeNodeComponent("image50"),
    image51: makeNodeComponent("image51"),
    image52: makeNodeComponent("image52"),
    image53: makeNodeComponent("image53"),
    image54: makeNodeComponent("image54"),
    image55: makeNodeComponent("image55"),
    image56: makeNodeComponent("image56"),
    客户案例2: makeNodeComponent("客户案例2"),
    title5: makeNodeComponent("title5"),
    经济效益2: makeNodeComponent("经济效益2"),
    foreground2: makeNodeComponent("foreground2"),
    icon经济效益: makeNodeComponent("icon经济效益"),
    space: makeNodeComponent("space"),
    竞争优势: makeNodeComponent("竞争优势"),
    foreground: makeNodeComponent("foreground"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for Plasmic餐饮
    internalVariantProps: Plasmic餐饮__VariantProps,
    internalArgProps: Plasmic餐饮__ArgProps
  }
);

export default Plasmic餐饮;
/* prettier-ignore-end */
